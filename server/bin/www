#!/usr/bin/env node

/****************************************************************************
    To start in production env:
        APP_ENV=prod NODE_ENV=production ./bin/www
    In Beta
        APP_ENV=beta NODE_ENV=production ./bin/www
    In Dev
        APP_ENV=dev NODE_ENV=development ./bin/www
****************************************************************************/
var express = require('express');
var constants = require('../../constants');
var path = require('path');
const fs = require('fs');
const http = require('http');
const https = require('https');
const logger = require('log4js').getLogger('http');
process.env.NODE_ENV = 'production';

/** ************************server启动*********************************/
const server = require('../app')
var app = express();
// app.use('/', function(req, res, next){
//   if(req.protocol != 'https'){
//     logger.warn("redirect to https://" + req.headers.host + req.originalUrl);
//     res.redirect('https://' + req.headers.host + req.originalUrl);
//   }else{
//     next();
//   }
// });
server(app);

/** ************************启动Https服务*********************************/
// var httpsPort = 443;
// var options = {
//   pfx:fs.readFileSync(path.posix.join(constants.ROOT_DIR, 'server/ssl/server.pfx')),
//   passphrase:'inspur'
// }
// var httpsServer = https.createServer(options, app).listen(httpsPort, "0.0.0.0", function(err){
//   if (err) {
//     return;
//   }
//   var uri = 'https://localhost';
//   console.log('https Server will be listening at ' + uri + "\n");
// });

/** ************************ 启动Http服务 *********************************/
var httpPort = 80;
var httpServer = http.createServer(app).listen(httpPort, '0.0.0.0', function(err) {
  if (err) {
    return;
  }
  var uri = 'http://localhost:' + httpPort;
  console.log('http Server will be listening at ' + uri + "\n");
});
